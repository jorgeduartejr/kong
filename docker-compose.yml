version: '3.9'

volumes:
  kong_data:
  kong_config:

networks:
  kong-net:

services:
  db:
    image: postgres:9.5
    container_name: kong-db
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "kong", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data

  kong-migrations:
    image: kong:latest
    container_name: kong-migrations
    depends_on:
      db:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    command: ["kong", "migrations", "bootstrap"]
    networks:
      - kong-net

  kong:
    image: kong:latest
    container_name: kong
    depends_on:
      kong-migrations:
        condition: service_completed_successfully
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    networks:
      - kong-net
    volumes:
      - kong_config:/etc/kong

  konga:
      image: pantsel/konga:latest
      container_name: konga
      ports:
        - "1337:1337"  # Porta onde a interface Konga estará disponível
      environment:
        NODE_ENV: production
      depends_on:
        - kong
      networks:
        - kong-net
      restart: unless-stopped